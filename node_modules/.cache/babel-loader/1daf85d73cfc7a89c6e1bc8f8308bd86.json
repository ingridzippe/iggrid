{"ast":null,"code":"var _jsxFileName = \"/Users/wyndolbar/Desktop/simplecoding/random/react-dnd-grid-tutorial/src/Main.js\";\nimport React, { useContext, useState } from \"react\";\nimport DragItem from \"./DragItem\";\nimport { Grid, GridImage, GridItem } from \"./Grid\";\nimport GridContext from \"./GridContext\";\nimport firebase from \"firebase/app\";\nimport \"firebase/analytics\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\nimport { firebaseApp } from \"./firebase.js\";\nvar firebaseDatabase = firebaseApp.database();\nvar firebaseStorageRef = firebase.storage().ref();\n\nfunction Main() {\n  const {\n    items,\n    moveItem\n  } = useContext(GridContext);\n  const [isAuth, setIsAuth] = useState(true);\n\n  if (!isAuth) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const [state, setState] = useState({\n    itemsState: items\n  });\n\n  function uploadGridToDatabase(array) {\n    firebaseDatabase.ref('/grids/' + 1).set({\n      grid: array\n    });\n  }\n\n  function fileUpload(event, items, item, index) {\n    console.log(items);\n    const file = event.target.files[0];\n    console.log(file);\n    const name = +new Date() + '-' + file.name;\n    const metadata = {\n      contentType: file.type\n    };\n    const task = firebaseStorageRef.child(name).put(file, metadata);\n    task.then(res => {\n      const image = firebaseStorageRef.child(name);\n      const urlPromise = image.getDownloadURL();\n      urlPromise.then(url => {\n        console.log(url);\n        items[index].src = url; // setItems(items)\n\n        uploadGridToDatabase(items);\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsAuth(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Log Out\"), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, items.map((item, index) => /*#__PURE__*/React.createElement(DragItem, {\n    key: item.id,\n    id: item.id,\n    onMoveItem: moveItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridImage, {\n    src: item.src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      opacity: 0,\n      width: \"100%\",\n      height: \"100%\"\n    },\n    title: \"\",\n    type: \"file\",\n    onChange: e => {\n      fileUpload(e, items, item, index);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })))))));\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/wyndolbar/Desktop/simplecoding/random/react-dnd-grid-tutorial/src/Main.js"],"names":["React","useContext","useState","DragItem","Grid","GridImage","GridItem","GridContext","firebase","firebaseApp","firebaseDatabase","database","firebaseStorageRef","storage","ref","Main","items","moveItem","isAuth","setIsAuth","state","setState","itemsState","uploadGridToDatabase","array","set","grid","fileUpload","event","item","index","console","log","file","target","files","name","Date","metadata","contentType","type","task","child","put","then","res","image","urlPromise","getDownloadURL","url","src","map","id","opacity","width","height","e"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport DragItem from \"./DragItem\";\nimport { Grid, GridImage, GridItem } from \"./Grid\";\nimport GridContext from \"./GridContext\";\nimport firebase from \"firebase/app\";\nimport \"firebase/analytics\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\nimport {firebaseApp} from \"./firebase.js\";\n\nvar firebaseDatabase = firebaseApp.database();\nvar firebaseStorageRef = firebase.storage().ref();\n\n\nfunction Main() {\n  const { items, moveItem } = useContext(GridContext);\n  const [isAuth, setIsAuth] = useState(true);\n  if(!isAuth) {\n    return <Redirect to=\"/login\"/>\n  }\n  const [state, setState] = useState({\n   itemsState: items\n  });\n  function uploadGridToDatabase(array) {\n    firebaseDatabase.ref('/grids/' + 1).set({\n      grid: array\n    })\n  }\n  function fileUpload(event, items, item, index) {\n    console.log(items)\n    const file = event.target.files[0]; \n    console.log(file)\n    const name = (+new Date()) + '-' + file.name;\n    const metadata = { contentType: file.type };\n    const task = firebaseStorageRef.child(name).put(file, metadata);\n    task\n      .then(res => {\n        const image = firebaseStorageRef.child(name);\n        const urlPromise = image.getDownloadURL();\n        urlPromise.then(url => {\n          console.log(url)\n          items[index].src = url;\n          // setItems(items)\n          uploadGridToDatabase(items)\n        })  \n      })\n  }\n  return (\n    <div className=\"Main\">\n      <button onClick={() => setIsAuth(false)}>Log Out</button>\n      <Grid>\n        {items.map((item, index) => (\n          <DragItem key={item.id} id={item.id} onMoveItem={moveItem}>\n            <GridItem>\n              <GridImage src={item.src}>\n                <input style={{opacity: 0, width: \"100%\", height: \"100%\"}} title=\"\" type=\"file\" \n                  onChange={(e) => {\n                    fileUpload(e, items, item, index)\n                }}/>\n              </GridImage>\n            </GridItem>\n          </DragItem>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}